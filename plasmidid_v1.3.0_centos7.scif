%appfiles plasmidid
	/opt/trimmomatic_v0.38_centos7.scif
	/opt/samtools_v1.9_centos7.scif
	/opt/spades_v3.12.0_centos7.scif
	/opt/ncbiblast_v2.7.1_centos7.scif
	/opt/bedtools_v2.27_centos7.scif
	/opt/bowtie2_v2.3.4.2_centos7.scif
	/opt/prokka_v1.13_centos7.scif
	/opt/cdhit_v4.6.6_centos7.scif
	/opt/circos_v0.69.6_centos7.scif

%appinstall plasmidid
	echo "Install PlasmidID dependencies"
	yum install -y bc \
				   gawk

	check_version() {
		RED='\033[0;31m'
		NC='\033[0m'
		GREEN='\033[0;32m'
		version=$1
		version_installed=$2
		program=$3
		if [[ "$version" > "$version_installed" ]];then
			echo -e "\n----------------------------------------------------------------------\n"
			echo -e "${RED}WARNING:${NC} $program version installed is lower than required for plasmidID. Check dependencies recipes, and/or change installation order. Omitting installation."
			echo -e "\n----------------------------------------------------------------------\n"
		elif [[ "$version" == "$version_installed" ]];then
			echo -e "\n----------------------------------------------------------------------\n"
			echo -e "${GREEN}INFO:${NC} Version of $program is already installed with same version, omitting."
			echo -e "\n----------------------------------------------------------------------\n"
		else
			echo -e "\n----------------------------------------------------------------------\n"
			echo -e "${GREEN}INFO:${NC} Version greater of $program is already installed, omitting."
			echo -e "\n----------------------------------------------------------------------\n"
		fi

	}

	echo "Install dependencies with scif recipe"
	echo "Install trimmomatic"
	if [ ! -d /scif/apps/trimmomatic ]; then
		scif install trimmomatic_v0.38_centos7.scif
	else
		echo "${RED}WARNING:${NC}There is a trimmomatic version already installed. You should check the other dependencies installed in order to check which version is installed."
	fi
	echo "Install samtools"
	if [ ! -d /scif/apps/samtools ]; then
		scif install samtools_v1.9_centos7.scif
	else
		ver=$(samtools --version | awk '/samtools/{print $2}')
		check_version "1.9" $ver "Samtools"
	fi
	echo "Install Spades"
	if [ ! -d /scif/apps/spades ]; then
		scif install spades_v3.12.0_centos7.scif
	else
		ver=$(spades.py --help 2>&1 | awk '/SPAdes genome/{print $4}')
		check_version "v3.12" $ver "SPAdes"
	fi
	echo "Install Blast+"
	if [ ! -d /scif/apps/ncbiblast ]; then
		scif install ncbiblast_v2.7.1_centos7.scif
	else
		ver=$(blastp -version 2>&1 | awk '/blastp/{print $2}')
		check_version "2.7.1" $ver "Blast+"
	fi
	echo "Install bedtools"
	if [ ! -d /scif/apps/bedtools ]; then
		scif install bedtools_v2.27_centos7.scif
	else
		ver=$(bedtools --version 2>&1 | awk '{print $2}')
		check_version "v2.27" $ver "Bedtools"
	fi
	echo "Install bowtie2"
	if [ ! -d /scif/apps/bowtie2 ]; then
		scif install bowtie2_v2.3.4.2_centos7.scif
	else
		ver=$(bowtie2 --version 2>&1 | awk '/bowtie2/{print $3}')
		check_version "2.3.4.2" $ver "Bowtie2"
	fi
	echo "Install prokka"
	if [ ! -d /scif/apps/prokka ]; then
		scif install prokka_v1.13_centos7.scif
	else
		ver=$(prokka --version 2>&1 | awk '/prokka/{print $2}')
		check_version "1.13" $ver "Prokka"
	fi
	echo "Install CD-HIT"
	if [ ! -d /scif/apps/cdhit ]; then
		scif install cdhit_v4.6.6_centos7.scif
	else
		ver=$(cd-hit -h 2>&1 | awk '/CD-HIT/ {print $4}')
		check_version "4.6.6" $ver "CD-HIT"
	fi
	echo "Install Circos"
	if [ ! -d /scif/apps/circos ]; then
		scif install circos_v0.69.6_centos7.scif
	else
		ver=$(circos --version 2>&1 | awk '/circos/{print $4}')
		check_version "0.69-6" $ver "Circos"
	fi

	echo "Finished dependencies installation"

    echo "Install PlasmidID"
    PLASMIDID_VERSION="1.3.0"

	curl -fsSL https://github.com/BU-ISCIII/plasmidID/archive/v${PLASMIDID_VERSION}.tar.gz -o plasmidID-${PLASMIDID_VERSION}.tar.gz && \
    tar xvf plasmidID-${PLASMIDID_VERSION}.tar.gz -C . && \
    rm plasmidID-${PLASMIDID_VERSION}.tar.gz

	ln -s $PWD/plasmidID-${PLASMIDID_VERSION}/plasmidID.sh bin
	ln -s $PWD/plasmidID-${PLASMIDID_VERSION}/bin/* bin

%apphelp plasmidid
    This app runs plasmidID pipeline for plasmid characterization.
%apprun plasmidid
    exec plasmidID.sh "$@"
%applabels plasmidid
    VERSION 1.3.0
%apptest plasmidid
    plasmidID.sh --version
	if [ $? -ne 0 ] ; then
	   echo 1
	else
	   echo 0
	fi
